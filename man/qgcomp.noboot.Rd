% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{qgcomp.noboot}
\alias{qgcomp.noboot}
\title{estimation of quantile g-computation fit (continuous outcome)
 or conditional quantile odds ratio (binary outcome)}
\usage{
qgcomp.noboot(f, data, expnms = NULL, q = 4, alpha = 0.05, ...)
}
\arguments{
\item{f}{R style formula}

\item{data}{data frame}

\item{expnms}{character vector of exposures of interest}

\item{q}{number of quantiles used to create quantile indicator variables
representing the exposure variables}

\item{alpha}{alpha level for confidence limit calculation}

\item{...}{arguments to glm (e.g. family)}
}
\value{
a qgcompfit object, which contains information about the effect
 measure of interest (gamma) and associated variance (var.gamma), as well
 as information on the model fit (fit) and information on the 
 weights/standardized coefficients in the positive (pweights) and 
 negative (nweight) directions.
}
\description{
This function mimics the output of a weighted quantile sums regression in 
large samples.
}
\details{
For continuous outcomes, under a linear model with no 
interaction terms, this is equivalent to g-computation of the effect of
increasing every exposure by 1 quantile. For binary outcomes
outcomes, this yields a conditional log odds ratio representing the 
change in the expected conditional odds (conditional on covariates)
from increasing every exposure by 1 quantile. In general, the latter 
quantity is not equivalent to g-computation estimates. Hypothesis test
statistics and 95% confidence intervals are based on using the delta
estimate variance of a linear combination of random variables.
}
\examples{
set.seed(50)
dat = data.frame(y=runif(50), x1=runif(50), x2=runif(50), z=runif(50))
qgcomp.noboot(f=y ~ z + x1 + x2, expnms = c('x1', 'x2'), data=dat, q=2)
}
\seealso{
\code{\link[qgcomp]{qgcomp.boot}}, and \code{\link[qgcomp]{qgcomp}}
}
\keyword{mixtures}
\keyword{variance,}

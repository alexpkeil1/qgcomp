% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{qgcomp.boot}
\alias{qgcomp.boot}
\title{qgcomp.boot: estimation of quantile g-computation fit, using bootstrap confidence
 intervals, yielding population average effect estimates for both continuous
 and binary outcomes, which correspond to the average expected change in the
 (log) outcome per quantile increase in the joint exposure to all exposures 
 in `expnms'}
\usage{
qgcomp.boot(f, data, expnms = NULL, q = 4, alpha = 0.05, B = 200,
  rr = TRUE, ...)
}
\arguments{
\item{f}{R style formula}

\item{data}{data frame}

\item{expnms}{character vector of exposures of interest}

\item{q}{number of quantiles used to create quantile indicator variables
representing the exposure variables}

\item{alpha}{alpha level for confidence limit calculation}

\item{B}{integer: number of bootstrap iterations}

\item{rr}{logical: if using binary outcome and rr=TRUE, qgcomp.boot will estimate risk ratio rather than odds ratio}

\item{...}{arguments to glm (e.g. family)}
}
\description{
qgcomp.boot: estimation of quantile g-computation fit, using bootstrap confidence
 intervals, yielding population average effect estimates for both continuous
 and binary outcomes, which correspond to the average expected change in the
 (log) outcome per quantile increase in the joint exposure to all exposures 
 in `expnms'
}
\examples{
set.seed(30)
# continuous outcome
dat = data.frame(y=rnorm(100), x1=runif(100), x2=runif(100), z=runif(100))
#Conditional linear slope
qgcomp.noboot(y ~ z + x1 + x2, expnms = c('x1', 'x2'), data=dat, q=4, family=gaussian())
#Marginal linear slope (population average slope, for a purely linear, additive model this will equal the conditional)
qgcomp.boot(y ~ z + x1 + x2, expnms = c('x1', 'x2'), data=dat, q=4, family=gaussian(), B=10) #increase B to at least 200 in actual examples
#Population average mixture slope which accounts for non-linearity and interactions
qgcomp.boot(y ~ z + x1 + x2 + I(x1^2) + I(x2*x1), family="gaussian", expnms = c('x1', 'x2'), data=dat, q=4, rr=TRUE, B=10)
# binary outcome
dat = data.frame(y=rbinom(50,1,0.5), x1=runif(50), x2=runif(50), z=runif(50))
#Conditional mixture OR
qgcomp.noboot(y ~ z + x1 + x2, family="binomial", expnms = c('x1', 'x2'), data=dat, q=2)
#Marginal mixture OR (population average OR - in general, this will not equal the conditional mixture OR due to non-collapsibility of the OR)
qgcomp.boot(y ~ z + x1 + x2, family="binomial", expnms = c('x1', 'x2'), data=dat, q=2, B=10)
#Population average mixture RR
qgcomp.boot(y ~ z + x1 + x2, family="binomial", expnms = c('x1', 'x2'), data=dat, q=2, rr=TRUE, B=10)
}
\keyword{mixtures}
\keyword{variance,}
